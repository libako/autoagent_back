// <auto-generated />
using System;
using AutoAgentes.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoAgentes.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("AutoAgentes.Domain.Entities.Agent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Autonomy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuardrailsJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParamsJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Temperature")
                        .HasColumnType("REAL");

                    b.Property<string>("TemplateRef")
                        .HasColumnType("TEXT");

                    b.Property<int>("TokenBudget")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToolBudget")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TopP")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.AgentToolBinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AgentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfigJson")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ToolId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ToolId");

                    b.HasIndex("AgentId", "ToolId")
                        .IsUnique();

                    b.ToTable("AgentToolBindings");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Actor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("PayloadJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.McpServer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSeenUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetadataJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("McpServers");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TokenUsageJson")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AgentId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndedUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("LastEventIdx")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgentId", "StartedUtc");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.Tool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InputSchemaJson")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("McpServerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Scope")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("McpServerId", "Name")
                        .IsUnique();

                    b.ToTable("Tools");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.TraceStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndedUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Idx")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PayloadJson")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SessionId", "Idx");

                    b.ToTable("TraceSteps");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.AgentToolBinding", b =>
                {
                    b.HasOne("AutoAgentes.Domain.Entities.Agent", "Agent")
                        .WithMany("Bindings")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoAgentes.Domain.Entities.Tool", "Tool")
                        .WithMany("Bindings")
                        .HasForeignKey("ToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Tool");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.Message", b =>
                {
                    b.HasOne("AutoAgentes.Domain.Entities.Session", "Session")
                        .WithMany("Messages")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.Session", b =>
                {
                    b.HasOne("AutoAgentes.Domain.Entities.Agent", "Agent")
                        .WithMany("Sessions")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.Tool", b =>
                {
                    b.HasOne("AutoAgentes.Domain.Entities.McpServer", "McpServer")
                        .WithMany("Tools")
                        .HasForeignKey("McpServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("McpServer");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.TraceStep", b =>
                {
                    b.HasOne("AutoAgentes.Domain.Entities.Session", "Session")
                        .WithMany("TraceSteps")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.Agent", b =>
                {
                    b.Navigation("Bindings");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.McpServer", b =>
                {
                    b.Navigation("Tools");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.Session", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("TraceSteps");
                });

            modelBuilder.Entity("AutoAgentes.Domain.Entities.Tool", b =>
                {
                    b.Navigation("Bindings");
                });
#pragma warning restore 612, 618
        }
    }
}
